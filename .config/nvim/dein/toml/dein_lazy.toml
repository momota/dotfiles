[[plugins]]
repo = 'markonm/traces.vim'

[[plugins]]
repo = 'vim-airline/vim-airline'

[[plugins]]
repo = 'vim-airline/vim-airline-themes'
depends = 'vim-airline'
hook_add = '''
    let g:airline_theme = 'molokai'
    let g:airline_powerline_fonts = 1
    let g:airline#extensions#tabline#enabled = 1
    let g:airline#extensions#tabline#buffer_idx_mode = 1
    let g:airline#extensions#tabline#fnamemod = ':t'
'''

##
# Filer
##
[[plugins]]
repo = 'scrooloose/nerdtree'
hook_add = '''
  let NERDTreeShowHidden = 1

  " Closes after opening a file
  let NERDTreeQuitOnOpen = 1

  nnoremap <silent><Space>ff :NERDTreeFind<CR>:vertical res 30<CR>
  nnoremap <silent><Space>ft :NERDTreeToggle<CR>:vertical res 30<CR>
'''

[[plugins]]
repo = 'ryanoasis/vim-devicons'
hook_add='''
  let g:webdevicons_enable_nerdtree = 1
  let g:webdevicons_enable_denite = 1
'''


[[plugins]]
repo = 'ctrlpvim/ctrlp.vim'
hook_add = '''
  " let g:ctrlp_cmd = 'CtrlPMRU'
  let g:ctrlp_types = ["mru", 'fil', 'buf']
  let g:ctrlp_mruf_max = 300
  if executable('ag')
    let g:ctrlp_use_caching = 0
    let g:ctrlp_user_command = 'ag %s -i --nocolor --nogroup -g ""'
  endif
  nnoremap <silent><Space>fm :CtrlP .<CR>
'''

[[plugins]]
repo = 'Shougo/neomru.vim'


# 検索にagを使う
[[plugins]]
repo = 'rking/ag.vim'
hook_add = '''
    let g:ag_prg="ag --vimgrep --hidden"
'''

##
# syntax
##
[[plugins]]
repo = 'cespare/vim-toml'


##
# colorscheme
##
[[plugins]]
repo = 'cocopon/iceberg.vim'
hook_add='''
  colorscheme iceberg
'''


# 色情報が入ったファイルを開いた場合は表示を色付けする
[[plugins]]
repo = 'vim-scripts/AnsiEsc.vim'

# 括弧の対応を分かりやすくするため色を変える
[[plugins]]
repo = 'luochen1990/rainbow'
hook_add = '''
    let g:rainbow_active = 1
'''

# インデントガイド
[[plugins]]
repo = 'nathanaelkane/vim-indent-guides'

# インデントのレベルによって色を変える
[[plugins]]
repo = 'thiagoalessio/rainbow_levels.vim'

##
# neosnippet
##
[[plugins]]
repo = 'Shougo/neosnippet.vim'
depends = ['neosnippet-snippets', 'context_filetype.vim']
on_i = 1
hook_source = '''
" Plugin key-mappings.
" Note: It must be "imap" and "smap".  It uses <Plug> mappings.
"imap <C-k>     <Plug>(neosnippet_expand_or_jump)
"smap <C-k>     <Plug>(neosnippet_expand_or_jump)
"xmap <C-k>     <Plug>(neosnippet_expand_target)

" SuperTab like snippets behavior.
" Note: It must be "imap" and "smap".  It uses <Plug> mappings.
imap <expr><TAB>
 \ pumvisible() ? "\<C-n>" :
 \ neosnippet#expandable_or_jumpable() ?
 \    "\<Plug>(neosnippet_expand_or_jump)" : "\<TAB>"

imap <expr><CR>
\ (pumvisible() && neosnippet#expandable()) ? "\<Plug>(neosnippet_expand_or_jump)" : "\<CR>"

smap <expr><TAB> neosnippet#expandable_or_jumpable() ?
\ "\<Plug>(neosnippet_expand_or_jump)" : "\<TAB>"

" For conceal markers.
"if has('conceal')
"  set conceallevel=2 concealcursor=niv
"endif
'''



[[plugins]]
repo = 'Shougo/neosnippet-snippets'
